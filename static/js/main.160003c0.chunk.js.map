{"version":3,"sources":["tarot.js","App.js","serviceWorker.js","index.js"],"names":["Cards","name","img","desciption","t","r","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","maxGetCards","numberOfCards","length","selectedNumbers","displayType","randKey","rand","Math","floor","random","includes","push","console","log","setState","shuffleCards","_this2","react_default","a","createElement","className","App_Header","href","onClick","App_Card","card","timePeriod","React","Component","Card","_this3","cards","cardDirection","displayState","displayStyle","display","timing","past","present","future","direction","description","position","top","left","bottom","right","border","backgroundColor","color","zIndex","_this4","period","src","renderImage","alt","displayDescription2","style","closeWindowButton","displayDescription","Header","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.160003c0.chunk.js","sourcesContent":["const Cards = [\n  {\"name\": \"The Fool\", \"img\": \"01.jpg\", \"desciption\":{\"t\": \"新しい始まり、新しい冒険、新しいチャンスの到来。いつまでも夢見がちではいられない現実を受け入れる時\", \"r\": \"躊躇い、優柔不断の結果、興味が持てない新しい始まりの可能性も\"}},\n  {\"name\": \"The Magician\", \"img\": \"02.jpg\", \"desciption\":{\"t\":\"独創性、オリジナリティ、想像力、技術力や自身にあふれた状態。自分自身の決断を信じて問題を乗り越えられると実感\", \"r\": \"意志の弱さや想像力の欠如。自信の喪失。自分の周囲の人々にも気を付けて、信用されないような行いに注意\"}},\n  {\"name\": \"The High Priestess\", \"img\": \"03.jpg\", \"desciption\":{\"t\": \"学びの時。決定することを学ぶ時。全て上手くいくような気持ちになるけれど、最新の注意が必要な時\", \"r\": \"無知やワガママ、浅はかな考えになっているかも。直感を信じて、他人との繋がりが重要な時\"}}, \n  {\"name\": \"The Empress\", \"img\": \"04.jpg\", \"desciption\":{\"t\": \"想像や達成、発展する時。忍耐することで新しいものを生み出せるチャンス到来\", \"r\": \"集中力や決断力の欠如。それに伴う自信の欠如と理想通りではないと後悔を感じている\"}},\n  {\"name\": \"The Emperor\", \"img\": \"05.jpg\", \"desciption\":{\"t\": \"勇猛果敢で自信に溢れ、誰からも慕われるリーダーシップを発揮。物事をテキパキ決断する時\", \"r\": \"不安定や決断力不足を感じ、弱気さに覆われます。周囲の意見をよく聞くことで事態を打開可能\"}}, \n  {\"name\": \"The Hierophant\", \"img\": \"06.jpg\", \"desciption\":{\"t\": \"許しや思いやりが周囲に対して必要な時。簡単ではない問題が起こっても解決方法は自分が知っています\", \"r\": \"自分の規範は正しいですか？これまでと異なる生き方や振る舞いをすることで何かが見えてくることも\"}}, \n  {\"name\": \"The Lovers\", \"img\": \"07.jpg\", \"desciption\":{\"t\": \"統一感や愛、情熱、楽観的。自分の期待と異なってもさらなる拡大や発展に。好機到来の時\", \"r\": \"別れや不満、不審感。自分の行動に責任を持ってしっかり決断したことを遂行する時\"}}, \n  {\"name\": \"The Chariot\", \"img\": \"08.jpg\", \"desciption\":{\"t\": \"勝利の時。状況を思い描いた通りに運べます。そのためには忍耐や決断を急かされたりして忙しい時\", \"r\": \"物事や状況をうまく把握できないため、周囲に振り回されます。自分の願望や目的を再考して一休みの時\"}},\n  {\"name\": \"Strength\", \"img\": \"09.jpg\", \"desciption\":{\"t\": \"状況と自分自身をコントロールができる時。疑いや心配事には一息ついて内なる力を発揮すれば解消可能\", \"r\": \"問題に対して内に秘めた力で対処可能。不安や低い自己評価を打ち消して、自分の力を信じる時\"}}, \n  {\"name\": \"The Hermit\", \"img\": \"10.jpg\", \"desciption\":{\"t\": \"深い英知でどんなことも理解可能と感じます。一人になって自分自身を見つめ直す良い機会\", \"r\": \"仲間から離れてしまった孤立感。集中して問題に取り組んでいるが、真の問題から目を背けています\"}}, \n  {\"name\": \"Wheel of Fortune\", \"img\": \"11.jpg\", \"desciption\":{\"t\": \"予想外の幸運。どんなことも自分の思うまま。宇宙が味方してくれていると感じます\", \"r\": \"物事が自分の手に余る方向へ。不必要なリスクを取ろうとしている可能性も。流れに身を任せる時\"}}, \n  {\"name\": \"Justice\", \"img\": \"12.jpg\", \"desciption\":{\"t\": \"あらゆる側面で物事を調整し、うまくバランスを取れる時。物事の均衡を保つよううまく調和させられます\", \"r\": \"不公平で偏った扱いを受け被害者になったような気分。正しい行いで均衡を保ち、状況を変えられます\"}},\n  {\"name\": \"The Hanged Man\", \"img\": \"13.jpg\", \"desciption\":{\"t\": \"今の状況に対し抵抗することを一旦再考し、進路を見出す時。決断が新しい道を作り出します\", \"r\": \"次に何をすれば良いのかわからない状況。今までの態度を改め、どうするか熟考が必要な時\"}}, \n  {\"name\": \"Death\", \"img\": \"14.jpg\", \"desciption\":{\"t\": \"今までのことは終了し変化の時。変化は痛みを伴うこともありますが、全てが味方になってくれます\", \"r\": \"環境の変化に抵抗しても無駄。素晴らしい未来に向けて前進することを選択する時\"}}, \n  {\"name\": \"Temperance\", \"img\": \"15.jpg\", \"desciption\":{\"t\": \"調和のある素晴らしい状況。目的に集中して邁進可能な時の表示\", \"r\": \"無謀な行動で協調性を欠き、親しい人ともトラブルに。争議や不満に\"}}, \n  {\"name\": \"The Devil\", \"img\": \"16.jpg\", \"desciption\":{\"t\": \"自分自身を抑制し過ぎ。野心や情熱のままに動いてみる時\", \"r\": \"過去を乗り越え未来へ進む時\"}},\n  {\"name\": \"The Tower\", \"img\": \"17.jpg\", \"desciption\":{\"t\": \"大きな変化、激動の時期。大惨事ですが、それを好機に利用可能。古いものを新しくするチャンス\", \"r\": \"悪状況で動けない状況。今までの状況を根底から変更し、今までの習慣を変え、新しい何かを導入する時\"}}, \n  {\"name\": \"The Star\", \"img\": \"18.jpg\", \"desciption\":{\"t\": \"困難な時期を乗り越え、次に進む準備が整っています。可能性は無限にあり、明るい未来に進みます\", \"r\": \"失望や不運に見舞われ絶望の中にいる気がします。しかし希望がないわけでなく、それは自分の中にあります\"}}, \n  {\"name\": \"The Moon\", \"img\": \"19.jpg\",\"desciption\": {\"t\": \"精神的な試練の時。潜在意識が語りかけています、もうすぐ自分の時代がやってくると\", \"r\": \"マイナス思考から脱し、物事が有利に進みます。問題は解消に向かい、新たな自信に満ち溢れます\"}}, \n  {\"name\": \"The Sun\", \"img\": \"20.jpg\", \"desciption\":{\"t\": \"自信に満ち、成功や喜びで満足な状況。全てうまくいき、周囲も満足\", \"r\": \"自惚れか自信過剰で周囲から孤立。障害を排除することに注力が必要\"}},\n  {\"name\": \"Judgement\", \"img\": \"21.jpg\", \"desciption\":{\"t\": \"審判の時。これまで持っていたものを見直し、不要なものを捨て、成功へのチャレンジへ進む時\", \"r\": \"負担だが、必要なことをする時。喪失感や無力感があっても自分自身に懸命に行動する必要があります\"}}, \n  {\"name\": \"The World\", \"img\": \"22.jpg\", \"desciption\":{\"t\": \"達成感や満足感に満たされる時。成功を勝ち取れる状況です\", \"r\": \"やったことへの失望や欲求不満状態。急がば回れが問題解消となる可能性\"}}\n];\n// const Cards = [\n//   [\"The Fool\", \"01.jpg\"], [\"The Magician\", \"02.jpg\"], [\"The High Priestess\", \"03.jpg\"], [\"The Empress\", \"04.jpg\"],\n//   [\"The Emperor\", \"05.jpg\"], [\"The Hierophant\", \"06.jpg\"], [\"The Lovers\", \"07.jpg\"], [\"The Chariot\", \"08.jpg\"],\n//   [\"Strength\", \"09.jpg\"], [\"The Hermit\", \"10.jpg\"], [\"Wheel of Fortune\", \"11.jpg\"], [\"Justice\", \"12.jpg\"],\n//   [\"The Hanged Man\", \"13.jpg\"], [\"Death\", \"14.jpg\"], [\"Temperance\", \"15.jpg\"], [\"The Devil\", \"16.jpg\"],\n//   [\"The Tower\", \"17.jpg\"], [\"The Star\", \"18.jpg\"], [\"The Moon\", \"19.jpg\"], [\"The Sun\", \"20.jpg\"],\n//   [\"Judgement\", \"21.jpg\"], [\"The World\", \"22.jpg\"]\n// ];\nexport default Cards;","import React from 'react';\nimport './App.css';\n\nimport Cards from './tarot';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      maxGetCards: 3,\n      numberOfCards: Cards.length,\n      selectedNumbers: [],\n      displayType: false,\n    }\n  }\n\n  shuffleCards() {\n    let randKey = [];\n    while(randKey.length < 3) {\n      let rand = Math.floor(Math.random() * this.state.numberOfCards);\n      if(!randKey.includes(rand)) {\n        randKey.push(rand);\n      }\n    }\n    console.log(randKey);\n    this.setState({\n      selectedNumbers: randKey\n    });\n  }\n\n  componentWillMount() {\n    this.shuffleCards();\n  }\n\n  displayType() {\n    this.setState({\n      displayType: true\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"main\">\n        <Header />\n        <div className=\"btn-area\">\n        {\n          (this.state.displayType)? <a href=\"/\" className=\"tryagainbtn\">Try Again</a>:\"\"\n        }\n        {\n          (!this.state.displayType)? <button onClick={() => this.displayType()} className=\"opencard\">Open Cards!</button>:\"\"\n        }\n        </div>\n        <div className=\"card-table\">\n        <Card card={this.state.selectedNumbers[0]} displayType={this.state.displayType} timePeriod=\"past\" />\n        <Card card={this.state.selectedNumbers[1]} displayType={this.state.displayType} timePeriod=\"present\" />\n        <Card card={this.state.selectedNumbers[2]} displayType={this.state.displayType} timePeriod=\"future\" />\n        </div>\n      </div>\n    )\n  }\n}\n\nclass Card extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      cards: Cards,\n      cardDirection: null,\n      displayState: true,\n      displayStyle: {display: \"none\"},\n      timing: {past: \"過去\", present: \"現在\", future: \"未来\"},\n    }\n  }\n\n  renderImage(img) {\n    return './images/' + img;\n  }\n\n  cardDirection() {\n    let rand = (Math.floor(Math.random()*10)%2 === 0) ? \"normal\" : \"reverse\";\n    return rand;\n  }\n\n  componentWillMount() {\n    const direction = this.cardDirection();\n    this.setState({\n      cardDirection: direction\n    })\n  }\n\n  displayDescription(cardDirection, description) {\n    if(cardDirection === 'normal') {\n      return(\n        <div>\n          {description['t']}\n        </div>\n      )  \n    } else {\n      return(\n        <div>\n          {description['r']}\n        </div>\n      )  \n    }\n  }\n\n  displayDescription2() {\n\n    if(this.state.displayState){\n      this.setState({\n        displayState: !this.state.displayState,\n        displayStyle: {\n          display: \"block\",\n          position: \"absolute\",\n          top: \"10px\",\n          left: \"10px\",\n          bottom: \"10px\",\n          right: \"10px\",\n          border: \"1px solid #000\",\n          backgroundColor: \"rgba(0,0,0,0.8)\",\n          color: \"#fff\",\n          zIndex: \"100\",\n        }\n      });\n    }\n    return;\n  }\n\n  closeWindowButton() {\n    this.setState({\n      displayState: !this.state.displayState,\n      displayStyle: {display: \"none\"}\n    });  \n  }\n\n  render() {\n    console.log(this.props.displayType);\n    let period = this.state.timing[this.props.timePeriod];\n    if(this.props.displayType) {\n      return (\n        <div className=\"tarot-card\">\n          {/* {this.state.cards[this.props.card].name}<br /> */}\n          <p className=\"card-timing\">{period}</p>\n          <img src={this.renderImage(this.state.cards[this.props.card].img)} \n          alt={this.state.cards[this.props.card].name} \n          className={this.state.cardDirection} onClick={() => this.displayDescription2(this.state.direction, this.state.cards[this.props.card].desciption)}\n          /><br />\n          <div style={this.state.displayStyle} onClick={() => this.closeWindowButton()}>\n            <div className=\"card-description\">\n              <span className=\"card-description-title\">{period}</span><br />\n              {this.displayDescription(this.state.cardDirection, this.state.cards[this.props.card].desciption)}\n            </div>\n            <div className=\"closeBtnArea\"><button>Close</button></div>\n          </div>\n        </div>\n      )\n    } else {\n      return (\n        <div className=\"tarot-card\">\n          <p className=\"card-timing\">{period}</p>\n          <img src=\"./images/card_front.png\" alt=\"Tarot Card\" />\n        </div>\n      )\n    }\n  }\n}\n\nclass Header extends React.Component{\n  \n\n  render() {\n    return(\n      <div className=\"header\">\n        <h1>3 Cards Tarot</h1>\n      </div>\n    )\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}